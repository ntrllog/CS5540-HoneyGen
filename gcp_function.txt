import functions_framework, fasttext, os, random
from google.cloud import storage

@functions_framework.http
def hello_http(request):
    request_json = request.get_json(silent=True)
    request_args = request.args

    if request_json and 'password' in request_json:
        password = request_json['password']
    elif request_args and 'password' in request_args:
        password = request_args['password']
    if request_json and 'k' in request_json:
        k = request_json['k']
    elif request_args and 'k' in request_args:
        k = request_args['k']
    return get_honeywords(password, k)

def download_bin_file():
    client = storage.Client("cs5540-355702")
    bucket = client.get_bucket("cs5540-honeygen")
    # CHANGE NAME OF BIN FILE
    blob = bucket.blob("model_trained_on_rockyou_500_epochs.bin")
    
    folder = '/tmp/'
    if not os.path.exists(folder):
        os.makedirs(folder)
    # CHANGE NAME OF BIN FILE
    blob.download_to_filename(folder + "model_trained_on_rockyou_500_epochs.bin")

def get_honeywords(password, k):
    if k > 1:
        download_bin_file()

    honeywords = []
    honeywords.append(password)
    if k-len(honeywords) > 0:
        # CHANGE NAME OF BIN FILE
        model = fasttext.load_model("/tmp/model_trained_on_rockyou_500_epochs.bin")
        temp = model.get_nearest_neighbors(password, k=(k-len(honeywords)))
        for element in temp:
            honeywords.append(element[1])
    random.shuffle(honeywords)

    return ','.join(honeywords)
